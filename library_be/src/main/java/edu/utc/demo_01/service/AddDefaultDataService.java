package edu.utc.demo_01.service;

import edu.utc.demo_01.entity.LibrarySetting;
import edu.utc.demo_01.repository.*;
import jakarta.annotation.PostConstruct;
import lombok.AccessLevel;
import lombok.RequiredArgsConstructor;
import lombok.experimental.FieldDefaults;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

import java.time.Instant;
import java.util.ArrayList;
import java.util.List;

@Service
@RequiredArgsConstructor
@FieldDefaults(level = AccessLevel.PRIVATE, makeFinal = true)
public class AddDefaultDataService {
    PasswordEncoder passwordEncoder;
    RoleRepository roleRepository;
    AchievementRepository achievementRepository;
    DDCClassificationRepository ddcClassificationRepository;
    UserRepository userRepository;
    AuthCredentialRepository authCredentialRepository;
    UserRoleRepository userRoleRepository;
    MembershipRepository membershipRepository;
    LibrarySettingRepository librarySettingRepository;

    //region Library Setting
    @PostConstruct
    public void initSetting() {
        if (librarySettingRepository.count() > 0) return;
        List<LibrarySetting> settings = new ArrayList<>();
        settings.add(createLibrarySetting("MaxTextbooks_GoldMember", "20"));
        settings.add(createLibrarySetting("MaxTextbooks_SilverMember", "15"));
        settings.add(createLibrarySetting("MaxTextbooks_BronzeMember", "10"));
        settings.add(createLibrarySetting("MaxReferenceMaterials_GoldMember", "6"));
        settings.add(createLibrarySetting("MaxReferenceMaterials_SilverMember", "4"));
        settings.add(createLibrarySetting("MaxReferenceMaterials_BronzeMember", "2"));
        settings.add(createLibrarySetting("LateFeeMultiplier_Textbook_Over3Months", "1"));
        settings.add(createLibrarySetting("LateFeeMultiplier_Textbook_Under3Months", "0.5"));
        settings.add(createLibrarySetting("LateFeeMultiplier_ReferenceMaterials_Over30Days", "1"));
        settings.add(createLibrarySetting("LateFeeMultiplier_ReferenceMaterials_Under30Days", "0.5"));
        settings.add(createLibrarySetting("Semester1_BorrowStartDate", "06-15"));
        settings.add(createLibrarySetting("Semester1_BorrowEndDate", "12-14"));
        settings.add(createLibrarySetting("Semester1_LatestReturnDate", "03-14"));
        settings.add(createLibrarySetting("Semester2_BorrowStartDate", "12-15"));
        settings.add(createLibrarySetting("Semester2_BorrowEndDate", "06-14"));
        settings.add(createLibrarySetting("Semester2_LatestReturnDate", "09-14"));
        settings.add(createLibrarySetting("MaximumBorrowingPeriodForReferenceMaterials", "45"));
        settings.add(createLibrarySetting("PointsDeductedForLateTextbookReturn", "20"));
        settings.add(createLibrarySetting("PointsDeductedForLateReferenceMaterialsReturn", "25"));
        settings.add(createLibrarySetting("BonusPointsForOnTimeBookReturn", "10"));
        settings.add(createLibrarySetting("PointsDeductedForDamagedBook", "30"));
        settings.add(createLibrarySetting("PointsDeductedForLostBook", "40"));
        librarySettingRepository.saveAll(settings);
    }

    private LibrarySetting createLibrarySetting(String settingKey, String settingValue) {
        LibrarySetting setting = new LibrarySetting();
        setting.setSettingKey(settingKey);
        setting.setValue(settingValue);
        setting.setUpdateAt(Instant.now());
        return setting;
    }
    //endregion
//
//    //region Roles
//    @PostConstruct
//    public void initRoles() {
//        // Check if roles already exist to avoid duplicate entries
//        if (roleRepository.count() > 0) {
//            return;
//        }
//
//        List<Role> roles = new ArrayList<>();
//
//        roles.add(createRole("MANAGER", "Qu·∫£n l√Ω"));
//        roles.add(createRole("LIBRARIAN", "Th·ªß th∆∞"));
//        roles.add(createRole("COORDINATOR", "Qu·∫£n l√Ω ph√≤ng ƒë·ªçc"));
//        roles.add(createRole("TEACHER", "Gi·∫£ng vi√™n"));
//        roles.add(createRole("STUDENT", "Sinh vi√™n"));
//        roles.add(createRole("RESEARCHER", "Nghi√™n c·ª©u sinh"));
//        roles.add(createRole("PATRON", "B·∫°n ƒë·ªçc"));
//
//        // Save all roles
//        roleRepository.saveAll(roles);
//    }
//
//    private Role createRole(String roleName, String description) {
//        Role role = new Role();
//        role.setRoleName(roleName);
//        role.setDescription(description);
//        return role;
//    }
//    //endregion
//
//    //region Achievements
//    @PostConstruct
//    public void initAchievements() {
//        if(achievementRepository.count() > 0) return;
//        List<Achievement> achievements = new ArrayList<>();
//
//        // 1. Th√†nh t√≠ch d·ª±a tr√™n s·ªë l∆∞·ª£ng s√°ch m∆∞·ª£n
//        achievements.add(createAchievement(
//                "ChƒÉm ch·ªâ ƒë·ªçc s√°ch",
//                "üìö",
//                "ƒê√£ m∆∞·ª£n 10 cu·ªën s√°ch",
//                10
//        ));
//        achievements.add(createAchievement(
//                "Ng∆∞·ªùi y√™u s√°ch",
//                "üìñ",
//                "ƒê√£ m∆∞·ª£n 50 cu·ªën s√°ch",
//                25
//        ));
//        achievements.add(createAchievement(
//                "Th·ªß lƒ©nh tri th·ª©c",
//                "üìï",
//                "ƒê√£ m∆∞·ª£n 100+ cu·ªën s√°ch",
//                50
//        ));
//
//        // 2. Th√†nh t√≠ch m∆∞·ª£n s√°ch ƒë√∫ng h·∫°n
//        achievements.add(createAchievement(
//                "Ng∆∞·ªùi ƒë·ªçc c√≥ tr√°ch nhi·ªám",
//                "‚è≥",
//                "Ho√†n tr·∫£ s√°ch ƒë√∫ng h·∫°n 10 l·∫ßn li√™n ti·∫øp",
//                15
//        ));
//        achievements.add(createAchievement(
//                "ƒê·ªôc gi·∫£ ƒë√°ng tin c·∫≠y",
//                "üèÜ",
//                "Kh√¥ng c√≥ l·ªãch s·ª≠ tr·∫£ s√°ch tr·ªÖ trong 1 nƒÉm",
//                30
//        ));
//        achievements.add(createAchievement(
//                "Ho√†n h·∫£o tuy·ªát ƒë·ªëi",
//                "üíØ",
//                "Kh√¥ng c√≥ b·∫•t k·ª≥ l·∫ßn tr·ªÖ h·∫°n n√†o t·ª´ khi ƒëƒÉng k√Ω (s·ªë s√°ch ƒë√£ m∆∞·ª£n > 20)",
//                50
//        ));
//
//        // 3. Th√†nh t√≠ch ƒë·ªçc ƒëa d·∫°ng th·ªÉ lo·∫°i
//        achievements.add(createAchievement(
//                "Nh√† kh√°m ph√° tri th·ª©c",
//                "üìî",
//                "ƒê√£ m∆∞·ª£n s√°ch t·ª´ 5 th·ªÉ lo·∫°i kh√°c nhau",
//                15
//        ));
//        achievements.add(createAchievement(
//                "Ng∆∞·ªùi ƒë·ªçc to√†n di·ªán",
//                "üìò",
//                "ƒê√£ m∆∞·ª£n s√°ch t·ª´ 10 th·ªÉ lo·∫°i kh√°c nhau",
//                30
//        ));
//        achievements.add(createAchievement(
//                "B√°ch khoa to√†n th∆∞ s·ªëng",
//                "üìö",
//                "ƒê√£ ƒë·ªçc ƒë·ªß t·∫•t c·∫£ th·ªÉ lo·∫°i s√°ch trong th∆∞ vi·ªán",
//                50
//        ));
//
//        // 4. Th√†nh t√≠ch v·ªÅ vi·ªác gi·ªõi thi·ªáu th∆∞ vi·ªán
//        achievements.add(createAchievement(
//                "Ng∆∞·ªùi truy·ªÅn c·∫£m h·ª©ng",
//                "üë•",
//                "Gi·ªõi thi·ªáu 5 ng∆∞·ªùi b·∫°n m·ªõi tham gia th∆∞ vi·ªán",
//                20
//        ));
//        achievements.add(createAchievement(
//                "ƒê·∫°i s·ª© th∆∞ vi·ªán",
//                "üì¢",
//                "Gi·ªõi thi·ªáu 20+ ng∆∞·ªùi tham gia th∆∞ vi·ªán",
//                40
//        ));
//
//        // 5. Th√†nh t√≠ch tham gia ho·∫°t ƒë·ªông th∆∞ vi·ªán
//        achievements.add(createAchievement(
//                "Ng∆∞·ªùi chia s·∫ª tri th·ª©c",
//                "üé§",
//                "ƒê√£ tham gia 3 bu·ªïi th·∫£o lu·∫≠n s√°ch",
//                15
//        ));
//        achievements.add(createAchievement(
//                "Nh√† vƒÉn t∆∞∆°ng lai",
//                "üé≠",
//                "ƒê√£ vi·∫øt √≠t nh·∫•t 5 b√†i ƒë√°nh gi√° s√°ch",
//                20
//        ));
//        achievements.add(createAchievement(
//                "Nh√† nghi√™n c·ª©u tr·∫ª",
//                "üèÖ",
//                "ƒê√£ tham gia √≠t nh·∫•t 1 h·ªôi th·∫£o nghi√™n c·ª©u c·ªßa th∆∞ vi·ªán",
//                15
//        ));
//
//        // 6. Th√†nh t√≠ch ƒë·∫∑c bi·ªát & danh hi·ªáu
//        achievements.add(createAchievement(
//                "ƒê·ªôc gi·∫£ c·ªßa th√°ng",
//                "ü•á",
//                "ƒê∆∞·ª£c b√¨nh ch·ªçn l√† ng∆∞·ªùi ƒë·ªçc t√≠ch c·ª±c nh·∫•t th√°ng",
//                25
//        ));
//        achievements.add(createAchievement(
//                "ƒê·ªôc gi·∫£ xu·∫•t s·∫Øc",
//                "üèÜ",
//                "M∆∞·ª£n nhi·ªÅu s√°ch nh·∫•t nƒÉm",
//                50
//        ));
//        achievements.add(createAchievement(
//                "Th√†nh vi√™n VIP",
//                "‚≠ê",
//                "ƒê·∫°t h·∫°ng th√†nh vi√™n cao nh·∫•t",
//                75
//        ));
//
//        // Save all achievements
//        achievementRepository.saveAll(achievements);
//    }
//
//    private Achievement createAchievement(String name, String icon, String description, int points) {
//        Achievement achievement = new Achievement();
//        achievement.setAchievementName(name);
//        achievement.setAchievementIcon(icon);
//        achievement.setDescription(description);
//        achievement.setPointsAwarded(points);
//        return achievement;
//    }
//    //endregion
//
//    //region DDCClassification
//        @PostConstruct
//        public void initDDCClassifications() {
//            // Check if classifications already exist to avoid duplicates
//            if (ddcClassificationRepository.count() > 0) {
//                return;
//            }
//
//            List<DDCClassification> classifications = new ArrayList<>();
//
//            classifications.add(createClassification(
//                    "000",
//                    "T·ªïng qu√°t",
//                    "B√°ch khoa to√†n th∆∞, th∆∞ m·ª•c v√† c√°c t√†i li·ªáu tham kh·∫£o chung."
//            ));
//
//            classifications.add(createClassification(
//                    "100",
//                    "Tri·∫øt h·ªçc & T√¢m l√Ω h·ªçc",
//                    "Si√™u h√¨nh h·ªçc, nh·∫≠n th·ª©c lu·∫≠n, ƒë·∫°o ƒë·ª©c h·ªçc, logic v√† t√¢m l√Ω h·ªçc."
//            ));
//
//            classifications.add(createClassification(
//                    "200",
//                    "T√¥n gi√°o",
//                    "C√°c t√¥n gi√°o tr√™n th·∫ø gi·ªõi, th·∫ßn tho·∫°i v√† th·∫ßn h·ªçc."
//            ));
//
//            classifications.add(createClassification(
//                    "300",
//                    "Khoa h·ªçc x√£ h·ªôi",
//                    "X√£ h·ªôi h·ªçc, nh√¢n h·ªçc, khoa h·ªçc ch√≠nh tr·ªã v√† lu·∫≠t."
//            ));
//
//            classifications.add(createClassification(
//                    "400",
//                    "Ng√¥n ng·ªØ",
//                    "Ng√¥n ng·ªØ h·ªçc, ng·ªØ ph√°p, t·ª´ ƒëi·ªÉn v√† c√°c ng√¥n ng·ªØ c·ª• th·ªÉ."
//            ));
//
//            classifications.add(createClassification(
//                    "500",
//                    "Khoa h·ªçc t·ª± nhi√™n",
//                    "To√°n h·ªçc, v·∫≠t l√Ω, h√≥a h·ªçc, sinh h·ªçc v√† thi√™n vƒÉn h·ªçc."
//            ));
//
//            classifications.add(createClassification(
//                    "600",
//                    "C√¥ng ngh·ªá & Khoa h·ªçc ·ª©ng d·ª•ng",
//                    "K·ªπ thu·∫≠t, y h·ªçc, n√¥ng nghi·ªáp v√† qu·∫£n l√Ω c√¥ng nghi·ªáp."
//            ));
//
//            classifications.add(createClassification(
//                    "700",
//                    "Ngh·ªá thu·∫≠t & Gi·∫£i tr√≠",
//                    "Ki·∫øn tr√∫c, ƒëi√™u kh·∫Øc, h·ªôi h·ªça, √¢m nh·∫°c v√† nhi·∫øp ·∫£nh."
//            ));
//
//            classifications.add(createClassification(
//                    "800",
//                    "VƒÉn h·ªçc",
//                    "Th∆°, k·ªãch, ti·ªÉu thuy·∫øt, ph√™ b√¨nh vƒÉn h·ªçc v√† c√°c th·ªÉ lo·∫°i vƒÉn h·ªçc kh√°c."
//            ));
//
//            classifications.add(createClassification(
//                    "900",
//                    "L·ªãch s·ª≠ & ƒê·ªãa l√Ω",
//                    "L·ªãch s·ª≠ th·∫ø gi·ªõi, ƒë·ªãa l√Ω, ti·ªÉu s·ª≠ v√† du l·ªãch."
//            ));
//
//            // Save all classifications
//            ddcClassificationRepository.saveAll(classifications);
//        }
//
//        private DDCClassification createClassification( String ddcCode, String ddcName, String description) {
//            DDCClassification classification = new DDCClassification();
//            classification.setDDCCode(ddcCode);
//            classification.setDDCName(ddcName);
//            classification.setDescription(description);
//            return classification;
//        }
//        //endregion
//
//    //region Create Default Account
//    @PostConstruct
//    public void initAccount() {
//        if (userRepository.findById("manager").isEmpty()){
//            User user = new User();
//            user.setUserID("manager");
//            user.setFullName("manager");
//            user.setUserType("Manager");
//            user.setStatus("Ho·∫°t d·ªông");
//            user.setCreatedAt(LocalDate.now());
//            user.setDob(LocalDate.of(2000, 1, 1));
//            user.setExpiry(LocalDate.of(3000, 1, 1));
//            user.setGender("default");
//            user.setUserImage("https://upload.wikimedia.org/wikipedia/commons/thumb/f/fa/LogoUTC.jpg/640px-LogoUTC.jpg");
//            user.setNationalID("default");
//            user = userRepository.save(user);
//            AuthCredential authCredential = new AuthCredential();
//            authCredential.setUserID(user);
//            authCredential.setEmail("admin@gmail.com");
//            authCredential.setPasswordHash(passwordEncoder.encode("123456"));
//            authCredentialRepository.save(authCredential);
//            Role role = roleRepository.findByRoleName("Manager");
//            UserRole userRole = new UserRole();
//            userRole.setUser(user);
//            userRole.setRole(role);
//            userRoleRepository.save(userRole);
//        }
//        if (userRepository.findById("coordinator").isEmpty()){
//            User user = new User();
//            user.setUserID("coordinator");
//            user.setFullName("coordinator");
//            user.setUserType("Staff");
//            user.setStatus("Ho·∫°t d·ªông");
//            user.setCreatedAt(LocalDate.now());
//            user.setDob(LocalDate.of(2000, 1, 1));
//            user.setExpiry(LocalDate.of(3000, 1, 1));
//            user.setGender("default");
//            user.setUserImage("https://upload.wikimedia.org/wikipedia/commons/thumb/f/fa/LogoUTC.jpg/640px-LogoUTC.jpg");
//            user.setNationalID("default");
//            user = userRepository.save(user);
//            AuthCredential authCredential = new AuthCredential();
//            authCredential.setUserID(user);
//            authCredential.setEmail("coordinator@gmail.com");
//            authCredential.setPasswordHash(passwordEncoder.encode("123456"));
//            authCredentialRepository.save(authCredential);
//            Role role = roleRepository.findByRoleName("Coordinator");
//            UserRole userRole = new UserRole();
//            userRole.setUser(user);
//            userRole.setRole(role);
//            userRoleRepository.save(userRole);
//        }
//        if (userRepository.findById("librarian").isEmpty()){
//            User user = new User();
//            user.setUserID("librarian");
//            user.setFullName("librarian");
//            user.setUserType("Staff");
//            user.setStatus("Ho·∫°t d·ªông");
//            user.setCreatedAt(LocalDate.now());
//            user.setDob(LocalDate.of(2000, 1, 1));
//            user.setExpiry(LocalDate.of(3000, 1, 1));
//            user.setGender("default");
//            user.setUserImage("https://upload.wikimedia.org/wikipedia/commons/thumb/f/fa/LogoUTC.jpg/640px-LogoUTC.jpg");
//            user.setNationalID("default");
//            user = userRepository.save(user);
//            AuthCredential authCredential = new AuthCredential();
//            authCredential.setUserID(user);
//            authCredential.setEmail("librarian@gmail.com");
//            authCredential.setPasswordHash(passwordEncoder.encode("123456"));
//            authCredentialRepository.save(authCredential);
//            Role role = roleRepository.findByRoleName("Librarian");
//            UserRole userRole = new UserRole();
//            userRole.setUser(user);
//            userRole.setRole(role);
//            userRoleRepository.save(userRole);
//        }
//        if (userRepository.findById("patron").isEmpty()){
//            User user = new User();
//            user.setUserID("patron");
//            user.setFullName("patron");
//            user.setUserType("Patron");
//            user.setStatus("Ho·∫°t d·ªông");
//            user.setCreatedAt(LocalDate.now());
//            user.setDob(LocalDate.of(2000, 1, 1));
//            user.setExpiry(LocalDate.of(3000, 1, 1));
//            user.setGender("default");
//            user.setMemberPoints(0);
//            user.setUserImage("https://upload.wikimedia.org/wikipedia/commons/thumb/f/fa/LogoUTC.jpg/640px-LogoUTC.jpg");
//            user.setNationalID("default");
//            user = userRepository.save(user);
//            AuthCredential authCredential = new AuthCredential();
//            authCredential.setUserID(user);
//            authCredential.setEmail("patron@gmail.com");
//            authCredential.setPasswordHash(passwordEncoder.encode("123456"));
//            authCredentialRepository.save(authCredential);
//            Role role = roleRepository.findByRoleName("patron");
//            UserRole userRole = new UserRole();
//            userRole.setUser(user);
//            userRole.setRole(role);
//            userRoleRepository.save(userRole);
//            Membership membership = new Membership();
//            membership.setUserID(user);
//            membership.setMembershipType("ƒê·ªìng");
//            membership.setUpdatedAt(Instant.now());
//            membershipRepository.save(membership);
//        }
//    }
//    //endregion
}
